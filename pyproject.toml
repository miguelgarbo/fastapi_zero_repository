[tool.poetry]
name = "fastapi-zero"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13,<4.0"
fastapi = {extras = ["standard"], version = "^0.116.1"}
sqlalchemy = "^2.0.43"
pydantic-settings = "^2.10.1"
alembic = "^1.16.5"


[tool.poetry.group.dev.dependencies]
ruff = "^0.12.12"
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
taskipy = "^1.14.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

#Define o maximo de colunas que uma linha de codigo deve ter 
#Como o migrations é um arquivo criado automaticamente, o task tool deve ignrolado
[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

#Define boas praticas para padronização do codigo , ele vai seguir as regras das letras do array
[tool.ruff.lint]
preview = true
select = ['I','F','E', 'W', 'PL', 'PT']

#Padrão de aspas simples
[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.taskipy.tasks]
lint = 'ruff check'
format = 'ruff format'
run = 'fastapi dev fastapi_zero/app.py'
test = 'pytest -s -x --cov=fastapi_zero -vv'
post_test = 'coverage html'
